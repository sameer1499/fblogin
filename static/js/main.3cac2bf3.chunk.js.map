{"version":3,"sources":["components/Auth.js","components/state/UserDetails.js","components/Login.js","components/RestrictedRoute.js","components/home/Nav.js","components/home/Appbar.js","components/home/Row.js","components/home/Listings.js","components/Home.js","App.js","index.js"],"names":["this","authenticated","callback","library","add","fab","faFacebook","faGooglePlus","faYelp","faYahoo","faFoursquare","ACTIONS","GET","CHANGE","DEL","initialState","reducer","listings","action","type","payload","details","phone","location","name","about","overall_star_rating","mission","access_token","id","newList","pageInfo","icon","source","address","rating","listed","push","map","each","filter","facebookContext","createContext","UserDetailsProvider","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","theme","button","fontSize","fontWeight","fbicon","marginRight","login","backgroundColor","display","alignItems","justifyContent","height","Login","props","useContext","classes","useEffect","window","FB","getLoginStatus","response","status","alert","getPageInfo","axios","get","authResponse","userID","accessToken","then","res","data","forEach","page","cancelToken","CancelToken","token","getEachPageInfo","catch","e","console","log","className","Button","variant","color","size","onClick","Auth","history","scope","startIcon","RestrictedRoute","Component","component","rest","render","to","pathname","state","from","drawer","flexShrink","width","toolbar","drawerPaper","typography","marginTop","letterSpacing","app","marginLeft","flexDirection","form","padding","logout","Appbar","handleLogout","AppBar","position","Select","defaultValue","MenuItem","Row","listing","useState","edit","setEdit","setAbout","setPhone","Fragment","TableCell","align","style","TextField","onChange","target","Close","prev","Done","post","Edit","mixins","flexGrow","palette","background","desault","spacing","table","minWidth","heading","margin","textTransform","Listings","Typography","TableContainer","Paper","Table","TableHead","TableRow","TableBody","row","key","home","Home","CssBaseline","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3cac2bf3.chunk.js","sourcesContent":["//  For handling Authentication. Callback function pushes path to props.history. \n// (When logout pushes '/' to history and \n// so can't simply redirect to dashboard without login)\n\nclass Auth {\n    constructor(){\n        this.authenticated = false\n    }\n    \n    login(callback){\n        this.authenticated = true\n        callback()\n    }\n    \n    logout(callback){\n        this.authenticated = false\n        callback()\n    }\n\n    status(){\n        return this.authenticated\n    }\n}\n\n\nexport default new Auth()","import React, { useReducer, createContext } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab, faFacebook, faGooglePlus, faYelp, faYahoo, faFoursquare } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(fab,faFacebook,faGooglePlus,faYelp, faYahoo, faFoursquare)\n\n//  ACTIONS\nconst ACTIONS = {\n    GET : 'get',\n    CHANGE : 'change-details',\n    DEL : 'delete-details'\n}\n\n//  Initial State\nconst initialState = [\n\n]\n\n// REDUCER function (GET and UPDATE)\nconst reducer = (listings, action) => {\n    switch (action.type) {\n        // GET When login state is updated by fetching info from user's page\n        case ACTIONS.GET : \n            var {location, phone, name, about, overall_star_rating, mission, access_token, id} = action.payload.details\n            var [...newList] = listings\n            const pageInfo = {\n                id : id,\n                access_token : access_token,\n                icon : <FontAwesomeIcon icon={['fab','facebook-f']} />,\n                source : \"Facebook\",\n                name : name,\n                about : about,\n                address : \"Kochi\",\n                phone : phone,\n                mission : mission,\n                rating : overall_star_rating ? `${overall_star_rating}/5` : 'No rating yet',\n                listed : true\n            }\n            newList.push(pageInfo)\n                \n            return newList\n\n        // UPDATE When the Update button is clicked and state is updated. Update on facebook page is done at Row Component\n        case ACTIONS.CHANGE :\n            var {about, phone, mission, id} = action.payload\n            const tmpList = listings.map(each => {\n                if(each.id === id) {\n                    return {...each,about:about,phone:phone,mission:mission}\n                }\n                return each\n            })\n            return tmpList\n\n        case ACTIONS.DEL : \n            var newList = listings.filter(each => each.id < 5)\n            return newList\n            \n        default : return listings\n    }\n}\n\n// State is available for all the components\nexport const facebookContext = createContext()\n\nexport const UserDetailsProvider = ({ children }) => {\n    const [listings, dispatch] = useReducer(reducer, initialState) \n \n    return(\n        <facebookContext.Provider value={[listings, dispatch, ACTIONS]}>\n            {children}\n        </facebookContext.Provider> \n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport axios from 'axios'\nimport Auth from './Auth'\nimport '../App.css'\nimport { Button, Icon } from '@material-ui/core' \nimport { makeStyles } from '@material-ui/core/styles'\nimport { facebookContext } from './state/UserDetails'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab, faFacebook } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(fab,faFacebook)\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      fontSize : '1.5rem',\n      fontWeight : '900'\n    },\n    fbicon : {\n        marginRight : 20,\n    },\n    login : {\n        backgroundColor:\"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\"\n    }\n  }));\n\n//  The permissions to be allowed by user\n\nconst scope = \"email,pages_manage_cta,pages_show_list,pages_read_engagement,pages_manage_metadata,pages_read_user_content,public_profile\"\n\nconst Login = (props) => {\n    const [ , dispatch, ACTIONS ] = useContext(facebookContext)\n    const classes = useStyles();\n\n    useEffect(() => {\n        window.FB.getLoginStatus(function(response){\n            if(response.status === 'not_authorized') alert('Try to Login after loging out of other facebook accounts in the browser')\n        })\n    },[])   \n\n    // Get info of each page (location, phone, name, about, rating, mission, acces_token, id)\n\n    const getEachPageInfo = page => {\n        const cancelToken = axios.CancelToken.source()\n        axios.get(`https://graph.facebook.com/${page.id}?fields=location,phone,name,about,overall_star_rating,mission,access_token&access_token=${page.access_token}`,\n        {cancelToken:cancelToken.token})\n        .then(response => {\n            dispatch({type : ACTIONS.GET, payload : {details : response.data}})\n        })\n        return () => cancelToken.cancel()\n        \n    }\n\n    // Get the info of pages handled by user\n\n    const getPageInfo = (response) => {\n        axios.get(`https://graph.facebook.com/${response.authResponse.userID}/accounts?access_token=${response.authResponse.accessToken}`)\n        .then(res => {\n            res.data.data.forEach(page => {\n               getEachPageInfo(page)\n            })\n        })\n        .catch(e => console.log(e))\n    }\n\n    // Loads the users information is authorised.\n\n    const handleLogin = () => {\n        window.FB.login(function(response){\n            if(response.status === 'not_authorized' || response.status === 'unknown') alert('User cancelled login or did not fully authorize!! Try to log out from the browser')\n            else{\n                console.log(response)\n                Auth.login(() => {\n                    props.history.push('/home')\n                })\n                getPageInfo(response)\n            }\n        },{scope : scope})\n    }\n        \n    return(\n        <div className={classes.login}>\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            onClick={handleLogin}\n            startIcon={<FontAwesomeIcon className={classes.fbicon} icon={['fab','facebook-f']} />}\n      >\n        Login With Facebook\n      </Button>\n        </div>\n    )    \n}\n\nexport default Login","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport Auth from './Auth'\n\n//  Implemented to allow only authorised users to access the listings page so that if not authenticted it wont show listing page\n\nconst RestrictedRoute = ({component : Component, ...rest}) => {\n    return(\n        <Route {...rest} \n            render={props => {\n                if(Auth.status()) {\n                    return <Component {...props} />\n                }\n                else{\n                    return(\n                        <Redirect\n                            to={{\n                                pathname:'/',\n                                state: {\n                                    from : props.location\n                                }\n                            }}\n                        />\n                    )\n                }\n            }}\n        />\n    )\n}\n\nexport default RestrictedRoute","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Drawer, List, Typography, Divider, ListItem, ListItemText, ListItemIcon } from '@material-ui/core'\nimport { Home, Web, Mouse, Star, List as ListIcon, EventAvailable, Settings } from '@material-ui/icons'\n\n//  Default nav items and default set to Listings and others are invalid\n\nconst navItems = [\n\n    \n]\n\nconst useStyles = makeStyles(theme => ({\n    drawer : {\n        flexShrink : 0,\n        width : 270,\n    },\n    toolbar : {\n        backgroundColor : '#009688',\n        height : 74\n    },\n    drawerPaper: {\n        width: 270,\n        backgroundColor : '#33ab9f'\n      },\n    typography : {\n        marginTop : 15,\n        color : 'white',\n        fontSize : 25,\n        letterSpacing : 2,\n    }\n\n}))\n\nconst Nav = () => {\n    const classes = useStyles()\n\n    return(\n       <div>\n           <Drawer\n            variant='permanent'\n            className={classes.drawer}\n            anchor=\"left\"\n            classes={{paper: classes.drawerPaper}}\n           >\n                <div className={classes.toolbar}>\n                    <Typography \n                        className={classes.typography} \n                        align=\"center\" \n                        color=\"primary\" \n                        variant=\"h6\">\n                            MENU\n                    </Typography>\n                </div>\n                <Divider />\n                <List>\n                    {navItems.map(item => (\n                        <ListItem \n                            button key={item.text} \n                            selected={item.sel ? true : false} \n                            style={{ color : 'white'}}\n                        >\n                            <ListItemIcon style={{ color : 'white'}}>{item.icon}</ListItemIcon>\n                            <ListItemText primary={item.text}/>\n                        </ListItem>\n                    ))}\n                </List>\n           </Drawer>\n       </div>\n    )\n}\n\nexport default Nav ","import React from 'react'\nimport { AppBar, Select, MenuItem, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\n\n\nconst useStyles = makeStyles({\n    app : {\n        backgroundColor : 'white',\n        width : '100%',\n        marginLeft : '270px',\n        display : 'flex',\n        flexDirection : 'row',\n        justifyContent : 'flex-end',\n        alignItems : 'center'\n    },\n    form : {\n        marginRight : '70px',\n        padding : '20px'\n    },\n    logout: {\n        marginRight : 20,\n    }\n\n})\n\nconst Appbar = ({handleLogout}) => {\n    const classes = useStyles()\n\n    return(\n        <AppBar position=\"fixed\" className={classes.app}>\n            <div className={classes.form}>\n                <Select id=\"loc\" defaultValue=\"Kochi, IN\">\n                    <MenuItem value=\"Kochi, IN\">Kochi, IN</MenuItem>\n                </Select>\n            </div>\n            <div className={classes.logout}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleLogout}>Logout</Button>\n            </div>\n        </AppBar>\n    )\n}\n\nexport default Appbar\n","import React, { useState, useContext } from 'react'\nimport { facebookContext } from '../state/UserDetails'\nimport { TableCell, TextField, Button } from '@material-ui/core'\nimport { Edit, Close, Done } from '@material-ui/icons'\nimport axios from 'axios'\n\n//  Component for each row of table.\n\nconst Row = ({ listing }) => {\n    const [ ,dispatch, ACTIONS ] = useContext(facebookContext)\n    const [ edit, setEdit ] = useState(false)\n    const [ about ,setAbout ] = useState(listing.about)\n    const [ phone, setPhone ] = useState(listing.phone)\n    const [ mission, setMission ] = useState(listing.mission)\n    \n    // Handle the update (about, phone and mission are updatable fields)\n    const handleUpdate = () => {\n        setEdit(prev => !prev)\n        if(listing.id > 4) {\n            axios.post(`https://graph.facebook.com/${listing.id}?about=${about}&phone=${phone}&mission=${mission}&access_token=${listing.access_token}`)\n            .then(response => {\n                if(response.status === 200) {\n                    dispatch({type: ACTIONS.CHANGE, payload:{about : about, phone : phone, mission : mission,  id : listing.id}})\n                    alert('Successfully Updated')\n                }\n                else alert(\"Couldn't Update.. Status : \"+response.status)\n            })\n        }\n        else dispatch({type: ACTIONS.CHANGE, payload:{about : about, phone : phone, mission : mission,  id : listing.id}})\n        \n    }\n    \n    //  When Edit icon is clicked, edit state changes to true\n    const handleEdit = () => {\n        setEdit(prev => !prev)\n    }\n    \n    //  To cancel the edit. The cross symbol\n    const handleCancel = () => {\n        setAbout(listing.name)\n        setPhone(listing.phone)\n        // edit state changes to false\n        setEdit(prev => !prev)\n    }\n\n    return(\n        <React.Fragment>\n            {/* ICON  */}\n            <TableCell align=\"center\" style={{fontSize : '1.4rem'}}>\n                {listing.icon}\n            </TableCell>\n            {/* SOURCE */}\n            <TableCell align=\"center\">{listing.source}</TableCell>\n            {/* NAME */}\n            <TableCell align=\"center\">{listing.name}</TableCell>\n            {/* ABOUT. Editable */}\n            <TableCell align=\"center\">\n                {edit ? \n                    <TextField \n                        name='about' \n                        value={about} \n                        onChange={e => setAbout(e.target.value)} \n                        color='secondary'\n                    /> : \n                    listing.about}\n            </TableCell>\n            {/* ADDRESS */}\n            <TableCell align=\"center\">{listing.address}</TableCell>\n            {/* PHONE. Editable */}\n            <TableCell align=\"center\">\n                {edit ? \n                    <TextField \n                        name='phone' \n                        value={phone} \n                        onChange={e => setPhone(e.target.value)} \n                        color='secondary'\n                    /> : \n                    listing.phone}\n            </TableCell>\n            {/* RATING */}\n            <TableCell align=\"center\">{listing.rating}</TableCell>\n            {/* LISTED */}\n            <TableCell align=\"center\">{listing.listed ? 'Yes': 'No'}</TableCell>\n            {/* STATUS. Can cancle the edit on cross icon */}\n            <TableCell align=\"center\">\n                {edit ?\n                    <Close \n                        color=\"secondary\" \n                        style={{fontSize : 35}} \n                        onClick={handleCancel} \n                    /> :\n                    <Done style={{fontSize : 35,color: \"#4caf50\" }} />        \n                }\n            </TableCell>\n            {/* UPDATE. Update editable fields on click */}\n            <TableCell align=\"center\">\n                {edit ? \n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        onClick={handleUpdate}\n                    >\n                        Update\n                    </Button> :\n                    <Edit color=\"primary\" onClick={handleEdit} />\n                }\n            </TableCell>\n    </React.Fragment>\n    )\n}\n\nexport default Row","import React, { useContext } from 'react'\nimport { makeStyles, Typography, Table, TableBody, TableContainer, TableRow, TableCell, TableHead, Paper } from '@material-ui/core'\nimport { facebookContext } from '../state/UserDetails'\nimport Row from './Row'\n\n//    The Listings Table ..\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    listings : {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.desault,\n        padding: theme.spacing(3)\n    },\n    table : {\n        minWidth : 650\n    },\n    heading : {\n        margin : 30,\n        textTransform : \"uppercase\"\n    }\n}))\n\nconst Listings = () => {\n    const [listings] = useContext(facebookContext)\n    const classes = useStyles()\n    return(\n        <div className={classes.listings}>\n            <div className={classes.toolbar} />\n            <Typography \n                align=\"center\" \n                variant=\"h4\" \n                className={classes.heading}\n            >\n                Listings\n            </Typography>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            <TableCell align=\"center\">Source</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">About</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Phone</TableCell>\n                            <TableCell align=\"center\">Rating</TableCell>\n                            <TableCell align=\"center\">Listed</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>\n                            <TableCell align=\"center\">Action</TableCell>\n                       </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {listings.map(row => (\n                            <TableRow key={row.id}>\n                                <Row listing={row} />\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default Listings","import React,{ useContext } from 'react'\nimport Nav from './home/Nav'\nimport Appbar from './home/Appbar'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline } from '@material-ui/core'\nimport Listings from './home/Listings'\nimport Auth from './Auth'\nimport { facebookContext } from './state/UserDetails'\n\nconst useStyles = makeStyles({\n    home : {\n        display : 'flex'\n    }\n})\n\nconst Home = (props) => {\n    const classes = useStyles()\n    const [, dispatch, ACTIONS] = useContext(facebookContext)\n\n    // Logs out of the current user from the app\n    const handleLogout = () => {\n        window.FB.logout(function(response){\n            console.log(response)\n        })\n        dispatch({type : ACTIONS.DEL})\n        Auth.logout(() => props.history.push('/'))\n    }\n    \n    return(\n        <div className={classes.home} >\n            <CssBaseline />\n            <Appbar handleLogout={handleLogout}/>\n            <Listings />\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport Login from './components/Login'\nimport RestrictedRoute from './components/RestrictedRoute'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { UserDetailsProvider } from './components/state/UserDetails' \nimport Home from './components/Home'\n\nconst App = () => {\n  return(\n    <React.Fragment>\n      <UserDetailsProvider>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <RestrictedRoute path=\"/home\" component={Home} />\n          </Switch>\n        </Router>\n      </UserDetailsProvider>\n    </React.Fragment>\n  )\n}\n \nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}